router.get("/", async (req, res, next) => {
  try {
    const { name } = req.query;
    const recipePromiseApi = fetch(`${apiRecipe}&addRecipeInformation=true&number=100`)
	.then((data) => data.json());

    const recipePromiseDb = Recipe.findAll({
      include: TypeOfDiet,
    });
    
    Promise.all([recipePromiseApi, recipePromiseDb]).then((respuesta) => {
      const [recipeApi, recipeDb] = respuesta;
      const filteredRecipesApi = recipeApi.results.map((recipe) => {
        peticion(recipe);
        const pasos = recipe.analyzedInstructions[0]
          ? recipe.analyzedInstructions[0].steps.map((item) => {
              return item?.step;
            })
          : ["No tiene receta"];
        return {
          id: recipe.id,
          name: recipe.title,
          summary: recipe.summary,
          healthScore: recipe.healthScore,
          instructions: pasos.join(" "),
        };
      });
      const allRecipes = [...filteredRecipesApi, ...recipeDb];
      if (name) {
        const busqueda = allRecipes.filter((recipe) =>
          recipe.name.toLowerCase().includes(name.toLowerCase())
        );
        return res.send(busqueda);
      }
      res.send(allRecipes);
    });
  } catch (e) {
    next(e);
  }
});



const recipePromApi = axios(`https://api.spoonacular.com/recipes/complexSearch?apiKey=${API_PASS}&addRecipeInformation=true&number=10`)
Promise.all( [recipePromApi] ).then((res3) => {     
	const [recipeApi] = res3
	res.status(200).json(recipeApi);
});




const peticion = (item) => {
  if (item.analyzedInstructions[0]) {
    const pasos = item.analyzedInstructions[0]?.steps?.map((item) => {
      return item?.step ?? "No tiene receta";
    });
    Recipe.create({
      id: item.id,
      name: item.title,
      summary: item.summary,
      healthScore: item.healthScore,
      instructions: pasos.join(" "),
    });
  }
};

Link para POST
https://stackoverflow.com/questions/29775797/fetch-post-json-data



.App {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}

h3 {
  text-align: center;
}

.topping {
  margin-top: 0.3rem;
  vertical-align: text-bottom;
}

.result {
  margin-top: 1rem;
}

.toppings-list,
.total {
  width: 30%;
  margin: 0 auto;
}

.toppings-list {
  list-style: none;
  padding: 0;
}

.toppings-list li {
  margin-bottom: 0.5rem;
}

.toppings-list-item {
  display: flex;
  justify-content: space-between;
}

.toppings-list li:last-child {
  border-top: 1px solid #ccc;
  margin-top: 1rem;
  padding-top: 1rem;
}

.toppings-list-item label {
  vertical-align: text-bottom;
  margin-left: 0.2rem;
}

.total {
  margin-top: 1rem;
}

@media screen and (max-width: 600px) {
  .toppings-list,
  .total {
    width: 90%;
  }
}



                  id={el.id}
                  title={el.title}
                  image={el.image}
                  summary={el.summary}
                  healthScore={el.healthScore}
                  dishTypes={el.dishTypes}
                  diets={el.diets}
                  instructions={el.instructions}
                  analyzedInstructions={el.analyzedInstructions}


select * from "Diets";

insert into "Diets" (name) values ('Gluten Free');
insert into "Diets" (name) values ('Ketogenic');
insert into "Diets" (name) values ('Vegetarian');
insert into "Diets" (name) values ('Lacto-Vegetarian');
insert into "Diets" (name) values ('Ovo-Vegetarian');
insert into "Diets" (name) values ('Vegan');


insert into "Recipes" (image, title, summary, healthscore, instructions, diets, "dishTypes")
	   values ('https://t1.rg.ltmcdn.com/es/posts/0/4/3/seco_de_res_a_la_nortena_75340_600.jpg',
		   	   'Fejoles con Seco', 'The recipe Homemade Garlic and Basil French Fries is ready in roughly 45 recipes.',
			   85,'prueba 77', '{ "vegetarian","dairy free"}', '{"lunch"}'
);
insert into "Recipes" (image, title, summary, healthscore, instructions, diets, "dishTypes")
	   values ('https://www.comedera.com/wp-content/uploads/2013/05/lomo-saltado-peruano-plato.jpg',
			   'Lomo Saltado', 
			   'The recipe Homemade Garlic and Basil French Fries is ready in roughly 45 recipes.',
			   76,'prueba 77','{"vegan", "dairy free"}','{"lunch", "dinner"}'
);
insert into "Recipes" (image, title, summary, healthscore, instructions, diets, "dishTypes")
	   values ('https://t2.rg.ltmcdn.com/es/posts/2/5/6/arroz_con_pollo_peruano_59652_600.jpg',
		   	   'Arroz con Pollo', 'The recipe Homemade Garlic and Basil French Fries is ready in roughly 45 recipes.',
			   98,'prueba 77', '{ "dairy free"}', '{"lunch"}'
);

Select tipo, count(*) from "Recipes" group by tipo;

Select * from "Recipes" order by title;
Select * from "Recipes" order by healthScore desc ;	

select * from "Recipes" where diets="Gluten free";	


select * from "Diets"




update "Recipes" set image='https://www.comedera.com/wp-content/uploads/2013/05/lomo-saltado-peruano-plato.jpg' where id=2;	   
			   
delete from "Recipes" where id=2

Select * from "Recipes" where name like '%Garlic%';	
Select * from "Recipes" where name like '%Sou%';	

create table xrecipe (idRecipe int, title varchar(10) ) ;
create table xdiet (idDiet int, descrip varchar(10) ) ;
create table diet_recipe (idRecipe int, idDiet int)

insert into xrecipe (title) values ('Fejoles con Seco');
insert into xrecipe (title) values ('Arroz con Pollo');
insert into xrecipe (title) values ('Aji de Gallina');

insert into "Diets" (name) values ('Gluten Free');
insert into "Diets" (name) values ('Ketogenic');
insert into "Diets" (name) values ('Vegetarian');
insert into "Diets" (name) values ('Lacto-Vegetarian');
insert into "Diets" (name) values ('Ovo-Vegetarian');
insert into "Diets" (name) values ('Vegan');


select * from "Xrecipes" r, "XDiets" d 
where r.idDiet = d.idDiet 

